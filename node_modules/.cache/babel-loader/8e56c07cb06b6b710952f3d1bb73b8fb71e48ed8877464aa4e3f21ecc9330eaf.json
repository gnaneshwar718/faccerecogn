{"ast":null,"code":"import React,{useRef,useEffect,useState}from'react';import Webcam from'react-webcam';import*as faceapi from'face-api.js';import{loadFaceRecognitionModels,detectFaces}from'../utils/faceRecognition';import{loadEmotionRecognitionModel,detectEmotions,getDominantEmotion}from'../utils/emotionRecognition';import{Box,Button,Typography,Card,CardContent,Container}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WebcamFeed=()=>{const webcamRef=useRef(null);const canvasRef=useRef(null);const fileInputRef=useRef(null);const[isWebcamOn,setIsWebcamOn]=useState(false);useEffect(()=>{const loadModels=async()=>{await loadFaceRecognitionModels();await loadEmotionRecognitionModel();};loadModels();},[]);const startWebcam=()=>{setIsWebcamOn(true);};const stopWebcam=()=>{setIsWebcamOn(false);if(canvasRef.current){const context=canvasRef.current.getContext('2d');if(context){context.clearRect(0,0,canvasRef.current.width,canvasRef.current.height);}}};const captureAndDetect=async()=>{if(webcamRef.current&&canvasRef.current){const video=webcamRef.current.video;if(video&&video.readyState===4){// Ensure video is ready\nconst displaySize={width:video.videoWidth,height:video.videoHeight};faceapi.matchDimensions(canvasRef.current,displaySize);// Capture image from webcam\nconst screenshot=webcamRef.current.getScreenshot();if(screenshot){// Convert data URL to Image object\nconst img=new Image();img.src=screenshot;img.onload=async()=>{// Detect faces and emotions from the captured image\nconst faces=await detectFaces(img);const emotions=await detectEmotions(img);const resizedDetections=faceapi.resizeResults(faces,displaySize);const canvas=canvasRef.current;if(canvas){const context=canvas.getContext('2d');if(context){context.clearRect(0,0,displaySize.width,displaySize.height);context.drawImage(img,0,0,displaySize.width,displaySize.height);// Draw the captured image\nfaceapi.draw.drawDetections(canvas,resizedDetections);faceapi.draw.drawFaceLandmarks(canvas,resizedDetections);resizedDetections.forEach((detection,i)=>{var _emotions$i;const{age,gender,genderProbability}=detection;const dominantEmotion=getDominantEmotion(((_emotions$i=emotions[i])===null||_emotions$i===void 0?void 0:_emotions$i.expressions)||{});const text=[`Age: ${Math.round(age)}`,`Gender: ${gender} (${(genderProbability*100).toFixed(2)}%)`,`Emotion: ${dominantEmotion}`].join(', ');const box=detection.detection.box;context.fillStyle='#fff';context.font='14px Arial';// Reduced font size\ncontext.fillText(text,box.x,box.y+box.height+20);// Moved text down\n});}}};}}}};const handleImageUpload=async event=>{if(event.target.files&&event.target.files.length>0){const file=event.target.files[0];if(file&&canvasRef.current){const img=await faceapi.bufferToImage(file);const faces=await detectFaces(img);const emotions=await detectEmotions(img);const displaySize={width:img.width,height:img.height};faceapi.matchDimensions(canvasRef.current,displaySize);const resizedDetections=faceapi.resizeResults(faces,displaySize);const canvas=canvasRef.current;if(canvas){const context=canvas.getContext('2d');if(context){context.clearRect(0,0,displaySize.width,displaySize.height);context.drawImage(img,0,0,displaySize.width,displaySize.height);// Draw the uploaded image\nfaceapi.draw.drawDetections(canvas,resizedDetections);faceapi.draw.drawFaceLandmarks(canvas,resizedDetections);resizedDetections.forEach((detection,i)=>{var _emotions$i2;const{age,gender,genderProbability}=detection;const dominantEmotion=getDominantEmotion(((_emotions$i2=emotions[i])===null||_emotions$i2===void 0?void 0:_emotions$i2.expressions)||{});const text=[`Age: ${Math.round(age)}`,`Gender: ${gender} (${(genderProbability*100).toFixed(2)}%)`,`Emotion: ${dominantEmotion}`].join(', ');const box=detection.detection.box;context.fillStyle='#fff';context.font='14px Arial';// Reduced font size\ncontext.fillText(text,box.x,box.y+box.height+20);// Moved text down\n});}}}}};const handleButtonClick=()=>{if(fileInputRef.current){fileInputRef.current.click();}};return/*#__PURE__*/_jsxs(Container,{maxWidth:\"md\",sx:{py:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",align:\"center\",gutterBottom:true,children:\"WEBCAM IMAGE FEED WITH FACIAL RECOGNITION\"}),/*#__PURE__*/_jsx(Card,{sx:{width:'85%',margin:'auto'},children:/*#__PURE__*/_jsxs(CardContent,{sx:{display:'flex',flexDirection:'column',alignItems:'center'},children:[/*#__PURE__*/_jsxs(Box,{sx:{position:'relative',width:'100%',paddingTop:'75%',overflow:'hidden',marginBottom:2},children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",ref:fileInputRef,onChange:handleImageUpload,style:{display:'none'}}),isWebcamOn&&/*#__PURE__*/_jsx(Webcam,{audio:false,ref:webcamRef,screenshotFormat:\"image/jpeg\",videoConstraints:{width:580,height:420,facingMode:'user'},style:{position:'absolute',top:0,left:0,width:'100%',height:'100%'}}),/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,style:{position:'absolute',top:0,left:0,width:'100%',height:'100%'}})]}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"center\",gap:2,flexWrap:\"wrap\",children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:captureAndDetect,disabled:!isWebcamOn,children:\"Capture & Detect Faces & Emotions\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"secondary\",onClick:startWebcam,disabled:isWebcamOn,children:\"Start Webcam\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"error\",onClick:stopWebcam,disabled:!isWebcamOn,children:\"Stop Webcam\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"secondary\",onClick:handleButtonClick,children:\"Upload Image\"})]})]})})]});};export default WebcamFeed;","map":{"version":3,"names":["React","useRef","useEffect","useState","Webcam","faceapi","loadFaceRecognitionModels","detectFaces","loadEmotionRecognitionModel","detectEmotions","getDominantEmotion","Box","Button","Typography","Card","CardContent","Container","jsx","_jsx","jsxs","_jsxs","WebcamFeed","webcamRef","canvasRef","fileInputRef","isWebcamOn","setIsWebcamOn","loadModels","startWebcam","stopWebcam","current","context","getContext","clearRect","width","height","captureAndDetect","video","readyState","displaySize","videoWidth","videoHeight","matchDimensions","screenshot","getScreenshot","img","Image","src","onload","faces","emotions","resizedDetections","resizeResults","canvas","drawImage","draw","drawDetections","drawFaceLandmarks","forEach","detection","i","_emotions$i","age","gender","genderProbability","dominantEmotion","expressions","text","Math","round","toFixed","join","box","fillStyle","font","fillText","x","y","handleImageUpload","event","target","files","length","file","bufferToImage","_emotions$i2","handleButtonClick","click","maxWidth","sx","py","children","variant","align","gutterBottom","margin","display","flexDirection","alignItems","position","paddingTop","overflow","marginBottom","type","ref","onChange","style","audio","screenshotFormat","videoConstraints","facingMode","top","left","justifyContent","gap","flexWrap","color","onClick","disabled"],"sources":["C:/Users/NNN/Desktop/New folder/face recogniser/webcam-facial-recognition/src/components/WebcamFeed.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport * as faceapi from 'face-api.js';\r\nimport { loadFaceRecognitionModels, detectFaces } from '../utils/faceRecognition';\r\nimport { loadEmotionRecognitionModel, detectEmotions, getDominantEmotion } from '../utils/emotionRecognition';\r\nimport { Box, Button, Typography, Card, CardContent, Container } from '@mui/material';\r\n\r\nconst WebcamFeed: React.FC = () => {\r\n    const webcamRef = useRef<Webcam>(null);\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n    const fileInputRef = useRef<HTMLInputElement>(null);\r\n    const [isWebcamOn, setIsWebcamOn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const loadModels = async () => {\r\n            await loadFaceRecognitionModels();\r\n            await loadEmotionRecognitionModel();\r\n        };\r\n\r\n        loadModels();\r\n    }, []);\r\n\r\n    const startWebcam = () => {\r\n        setIsWebcamOn(true);\r\n    };\r\n\r\n    const stopWebcam = () => {\r\n        setIsWebcamOn(false);\r\n        if (canvasRef.current) {\r\n            const context = canvasRef.current.getContext('2d');\r\n            if (context) {\r\n                context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n            }\r\n        }\r\n    };\r\n\r\n    const captureAndDetect = async () => {\r\n        if (webcamRef.current && canvasRef.current) {\r\n            const video = webcamRef.current.video;\r\n            if (video && video.readyState === 4) { // Ensure video is ready\r\n                const displaySize = { width: video.videoWidth, height: video.videoHeight };\r\n                faceapi.matchDimensions(canvasRef.current, displaySize);\r\n\r\n                // Capture image from webcam\r\n                const screenshot = webcamRef.current.getScreenshot();\r\n                if (screenshot) {\r\n                    // Convert data URL to Image object\r\n                    const img = new Image();\r\n                    img.src = screenshot;\r\n\r\n                    img.onload = async () => {\r\n                        // Detect faces and emotions from the captured image\r\n                        const faces = await detectFaces(img);\r\n                        const emotions = await detectEmotions(img);\r\n\r\n                        const resizedDetections = faceapi.resizeResults(faces, displaySize);\r\n                        const canvas = canvasRef.current;\r\n                        if (canvas) {\r\n                            const context = canvas.getContext('2d');\r\n                            if (context) {\r\n                                context.clearRect(0, 0, displaySize.width, displaySize.height);\r\n                                context.drawImage(img, 0, 0, displaySize.width, displaySize.height); // Draw the captured image\r\n                                faceapi.draw.drawDetections(canvas, resizedDetections);\r\n                                faceapi.draw.drawFaceLandmarks(canvas, resizedDetections);\r\n\r\n                                resizedDetections.forEach((detection, i) => {\r\n                                    const { age, gender, genderProbability } = detection;\r\n                                    const dominantEmotion = getDominantEmotion(emotions[i]?.expressions || {});\r\n\r\n                                    const text = [\r\n                                        `Age: ${Math.round(age)}`,\r\n                                        `Gender: ${gender} (${(genderProbability * 100).toFixed(2)}%)`,\r\n                                        `Emotion: ${dominantEmotion}`\r\n                                    ].join(', ');\r\n\r\n                                    const box = detection.detection.box;\r\n                                    context.fillStyle = '#fff';\r\n                                    context.font = '14px Arial'; // Reduced font size\r\n                                    context.fillText(text, box.x, box.y + box.height + 20); // Moved text down\r\n                                });\r\n                            }\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleImageUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.files && event.target.files.length > 0) {\r\n            const file = event.target.files[0];\r\n            if (file && canvasRef.current) {\r\n                const img = await faceapi.bufferToImage(file);\r\n                const faces = await detectFaces(img);\r\n                const emotions = await detectEmotions(img);\r\n\r\n                const displaySize = { width: img.width, height: img.height };\r\n                faceapi.matchDimensions(canvasRef.current, displaySize);\r\n\r\n                const resizedDetections = faceapi.resizeResults(faces, displaySize);\r\n                const canvas = canvasRef.current;\r\n                if (canvas) {\r\n                    const context = canvas.getContext('2d');\r\n                    if (context) {\r\n                        context.clearRect(0, 0, displaySize.width, displaySize.height);\r\n                        context.drawImage(img, 0, 0, displaySize.width, displaySize.height); // Draw the uploaded image\r\n                        faceapi.draw.drawDetections(canvas, resizedDetections);\r\n                        faceapi.draw.drawFaceLandmarks(canvas, resizedDetections);\r\n\r\n                        resizedDetections.forEach((detection, i) => {\r\n                            const { age, gender, genderProbability } = detection;\r\n                            const dominantEmotion = getDominantEmotion(emotions[i]?.expressions || {});\r\n\r\n                            const text = [\r\n                                `Age: ${Math.round(age)}`,\r\n                                `Gender: ${gender} (${(genderProbability * 100).toFixed(2)}%)`,\r\n                                `Emotion: ${dominantEmotion}`\r\n                            ].join(', ');\r\n\r\n                            const box = detection.detection.box;\r\n                            context.fillStyle = '#fff';\r\n                            context.font = '14px Arial'; // Reduced font size\r\n                            context.fillText(text, box.x, box.y + box.height + 20); // Moved text down\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleButtonClick = () => {\r\n        if (fileInputRef.current) {\r\n            fileInputRef.current.click();\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n        <Container maxWidth=\"md\" sx={{ py: 4 }}>\r\n            <Typography variant=\"h5\" align=\"center\" gutterBottom>\r\n                WEBCAM IMAGE FEED WITH FACIAL RECOGNITION\r\n            </Typography>\r\n\r\n            <Card sx={{ width: '85%', margin: 'auto' }}>\r\n                <CardContent sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n\r\n                    <Box sx={{ position: 'relative', width: '100%', paddingTop: '75%', overflow: 'hidden', marginBottom: 2 }}>\r\n                        <input\r\n                            type=\"file\"\r\n                            ref={fileInputRef}\r\n                            onChange={handleImageUpload}\r\n                            style={{ display: 'none' }}\r\n                        />\r\n\r\n                        {isWebcamOn && (\r\n                            <Webcam\r\n                                audio={false}\r\n                                ref={webcamRef}\r\n                                screenshotFormat=\"image/jpeg\"\r\n                                videoConstraints={{\r\n                                    width: 580,\r\n                                    height: 420,\r\n                                    facingMode: 'user',\r\n                                }}\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    top: 0,\r\n                                    left: 0,\r\n                                    width: '100%',\r\n                                    height: '100%',\r\n                                }}\r\n                            />\r\n                        )}\r\n\r\n                        <canvas\r\n                            ref={canvasRef}\r\n                            style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                left: 0,\r\n                                width: '100%',\r\n                                height: '100%',\r\n                            }}\r\n                        />\r\n                    </Box>\r\n\r\n                    <Box display=\"flex\" justifyContent=\"center\" gap={2} flexWrap=\"wrap\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={captureAndDetect}\r\n                            disabled={!isWebcamOn}\r\n                        >\r\n                            Capture & Detect Faces & Emotions\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            onClick={startWebcam}\r\n                            disabled={isWebcamOn}\r\n                        >\r\n                            Start Webcam\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            onClick={stopWebcam}\r\n                            disabled={!isWebcamOn}\r\n                        >\r\n                            Stop Webcam\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"secondary\"\r\n                            onClick={handleButtonClick}\r\n                        >\r\n                            Upload Image\r\n                        </Button>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default WebcamFeed;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
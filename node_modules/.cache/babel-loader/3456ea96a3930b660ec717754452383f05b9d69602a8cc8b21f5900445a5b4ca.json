{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NNN\\\\Desktop\\\\New folder\\\\face recogniser\\\\webcam-facial-recognition\\\\src\\\\components\\\\WebcamFeed.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport Webcam from 'react-webcam';\nimport * as faceapi from 'face-api.js';\nimport { loadFaceRecognitionModels, detectFaces } from '../utils/faceRecognition';\nimport { loadEmotionRecognitionModel, detectEmotions, getDominantEmotion } from '../utils/emotionRecognition';\nimport { Box, Button, Typography, Card, CardContent, Container } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebcamFeed = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [isWebcamOn, setIsWebcamOn] = useState(false);\n  useEffect(() => {\n    const loadModels = async () => {\n      await loadFaceRecognitionModels();\n      await loadEmotionRecognitionModel();\n    };\n    loadModels();\n  }, []);\n  const startWebcam = () => {\n    setIsWebcamOn(true);\n  };\n  const stopWebcam = () => {\n    setIsWebcamOn(false);\n    if (canvasRef.current) {\n      const context = canvasRef.current.getContext('2d');\n      if (context) {\n        context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      }\n    }\n  };\n  const captureAndDetect = async () => {\n    if (webcamRef.current && canvasRef.current) {\n      const video = webcamRef.current.video;\n      if (video && video.readyState === 4) {\n        // Ensure video is ready\n        const displaySize = {\n          width: video.videoWidth,\n          height: video.videoHeight\n        };\n        faceapi.matchDimensions(canvasRef.current, displaySize);\n\n        // Capture image from webcam\n        const screenshot = webcamRef.current.getScreenshot();\n        if (screenshot) {\n          // Convert data URL to Image object\n          const img = new Image();\n          img.src = screenshot;\n          img.onload = async () => {\n            // Detect faces and emotions from the captured image\n            const faces = await detectFaces(img);\n            const emotions = await detectEmotions(img);\n            const resizedDetections = faceapi.resizeResults(faces, displaySize);\n            const canvas = canvasRef.current;\n            if (canvas) {\n              const context = canvas.getContext('2d');\n              if (context) {\n                context.clearRect(0, 0, displaySize.width, displaySize.height);\n                context.drawImage(img, 0, 0, displaySize.width, displaySize.height); // Draw the captured image\n                faceapi.draw.drawDetections(canvas, resizedDetections);\n                faceapi.draw.drawFaceLandmarks(canvas, resizedDetections);\n                resizedDetections.forEach((detection, i) => {\n                  var _emotions$i;\n                  const {\n                    age,\n                    gender,\n                    genderProbability\n                  } = detection;\n                  const dominantEmotion = getDominantEmotion(((_emotions$i = emotions[i]) === null || _emotions$i === void 0 ? void 0 : _emotions$i.expressions) || {});\n                  const text = [`Age: ${Math.round(age)}`, `Gender: ${gender} (${(genderProbability * 100).toFixed(2)}%)`, `Emotion: ${dominantEmotion}`].join(', ');\n                  const box = detection.detection.box;\n                  context.fillStyle = '#fff';\n                  context.font = '14px Arial'; // Reduced font size\n                  context.fillText(text, box.x, box.y + box.height + 20); // Moved text down\n                });\n              }\n            }\n          };\n        }\n      }\n    }\n  };\n  const handleImageUpload = async event => {\n    if (event.target.files && event.target.files.length > 0) {\n      const file = event.target.files[0];\n      if (file && canvasRef.current) {\n        const img = await faceapi.bufferToImage(file);\n        const faces = await detectFaces(img);\n        const emotions = await detectEmotions(img);\n        const displaySize = {\n          width: img.width,\n          height: img.height\n        };\n        faceapi.matchDimensions(canvasRef.current, displaySize);\n        const resizedDetections = faceapi.resizeResults(faces, displaySize);\n        const canvas = canvasRef.current;\n        if (canvas) {\n          const context = canvas.getContext('2d');\n          if (context) {\n            context.clearRect(0, 0, displaySize.width, displaySize.height);\n            context.drawImage(img, 0, 0, displaySize.width, displaySize.height); // Draw the uploaded image\n            faceapi.draw.drawDetections(canvas, resizedDetections);\n            faceapi.draw.drawFaceLandmarks(canvas, resizedDetections);\n            resizedDetections.forEach((detection, i) => {\n              var _emotions$i2;\n              const {\n                age,\n                gender,\n                genderProbability\n              } = detection;\n              const dominantEmotion = getDominantEmotion(((_emotions$i2 = emotions[i]) === null || _emotions$i2 === void 0 ? void 0 : _emotions$i2.expressions) || {});\n              const text = [`Age: ${Math.round(age)}`, `Gender: ${gender} (${(genderProbability * 100).toFixed(2)}%)`, `Emotion: ${dominantEmotion}`].join(', ');\n              const box = detection.detection.box;\n              context.fillStyle = '#fff';\n              context.font = '14px Arial'; // Reduced font size\n              context.fillText(text, box.x, box.y + box.height + 20); // Moved text down\n            });\n          }\n        }\n      }\n    }\n  };\n  const handleButtonClick = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"WEBCAM IMAGE FEED WITH FACIAL RECOGNITION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: '85%',\n        margin: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'relative',\n            width: '100%',\n            paddingTop: '75%',\n            overflow: 'hidden',\n            marginBottom: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            ref: fileInputRef,\n            onChange: handleImageUpload,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), isWebcamOn && /*#__PURE__*/_jsxDEV(Webcam, {\n            audio: false,\n            ref: webcamRef,\n            screenshotFormat: \"image/jpeg\",\n            videoConstraints: {\n              width: 580,\n              height: 420,\n              facingMode: 'user'\n            },\n            style: {\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            style: {\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          gap: 2,\n          flexWrap: \"wrap\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: captureAndDetect,\n            disabled: !isWebcamOn,\n            children: \"Capture & Detect Faces & Emotions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: startWebcam,\n            disabled: isWebcamOn,\n            children: \"Start Webcam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"error\",\n            onClick: stopWebcam,\n            disabled: !isWebcamOn,\n            children: \"Stop Webcam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"secondary\",\n            onClick: handleButtonClick,\n            children: \"Upload Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n};\n_s(WebcamFeed, \"7rgklBFA/yR1YnI6Z3Q6V4ao31A=\");\n_c = WebcamFeed;\nexport default WebcamFeed;\nvar _c;\n$RefreshReg$(_c, \"WebcamFeed\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Webcam","faceapi","loadFaceRecognitionModels","detectFaces","loadEmotionRecognitionModel","detectEmotions","getDominantEmotion","Box","Button","Typography","Card","CardContent","Container","jsxDEV","_jsxDEV","WebcamFeed","_s","webcamRef","canvasRef","fileInputRef","isWebcamOn","setIsWebcamOn","loadModels","startWebcam","stopWebcam","current","context","getContext","clearRect","width","height","captureAndDetect","video","readyState","displaySize","videoWidth","videoHeight","matchDimensions","screenshot","getScreenshot","img","Image","src","onload","faces","emotions","resizedDetections","resizeResults","canvas","drawImage","draw","drawDetections","drawFaceLandmarks","forEach","detection","i","_emotions$i","age","gender","genderProbability","dominantEmotion","expressions","text","Math","round","toFixed","join","box","fillStyle","font","fillText","x","y","handleImageUpload","event","target","files","length","file","bufferToImage","_emotions$i2","handleButtonClick","click","maxWidth","sx","py","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","margin","display","flexDirection","alignItems","position","paddingTop","overflow","marginBottom","type","ref","onChange","style","audio","screenshotFormat","videoConstraints","facingMode","top","left","justifyContent","gap","flexWrap","color","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/NNN/Desktop/New folder/face recogniser/webcam-facial-recognition/src/components/WebcamFeed.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport * as faceapi from 'face-api.js';\r\nimport { loadFaceRecognitionModels, detectFaces } from '../utils/faceRecognition';\r\nimport { loadEmotionRecognitionModel, detectEmotions, getDominantEmotion } from '../utils/emotionRecognition';\r\nimport { Box, Button, Typography, Card, CardContent, Container } from '@mui/material';\r\n\r\nconst WebcamFeed: React.FC = () => {\r\n    const webcamRef = useRef<Webcam>(null);\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n    const fileInputRef = useRef<HTMLInputElement>(null);\r\n    const [isWebcamOn, setIsWebcamOn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const loadModels = async () => {\r\n            await loadFaceRecognitionModels();\r\n            await loadEmotionRecognitionModel();\r\n        };\r\n\r\n        loadModels();\r\n    }, []);\r\n\r\n    const startWebcam = () => {\r\n        setIsWebcamOn(true);\r\n    };\r\n\r\n    const stopWebcam = () => {\r\n        setIsWebcamOn(false);\r\n        if (canvasRef.current) {\r\n            const context = canvasRef.current.getContext('2d');\r\n            if (context) {\r\n                context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n            }\r\n        }\r\n    };\r\n\r\n    const captureAndDetect = async () => {\r\n        if (webcamRef.current && canvasRef.current) {\r\n            const video = webcamRef.current.video;\r\n            if (video && video.readyState === 4) { // Ensure video is ready\r\n                const displaySize = { width: video.videoWidth, height: video.videoHeight };\r\n                faceapi.matchDimensions(canvasRef.current, displaySize);\r\n\r\n                // Capture image from webcam\r\n                const screenshot = webcamRef.current.getScreenshot();\r\n                if (screenshot) {\r\n                    // Convert data URL to Image object\r\n                    const img = new Image();\r\n                    img.src = screenshot;\r\n\r\n                    img.onload = async () => {\r\n                        // Detect faces and emotions from the captured image\r\n                        const faces = await detectFaces(img);\r\n                        const emotions = await detectEmotions(img);\r\n\r\n                        const resizedDetections = faceapi.resizeResults(faces, displaySize);\r\n                        const canvas = canvasRef.current;\r\n                        if (canvas) {\r\n                            const context = canvas.getContext('2d');\r\n                            if (context) {\r\n                                context.clearRect(0, 0, displaySize.width, displaySize.height);\r\n                                context.drawImage(img, 0, 0, displaySize.width, displaySize.height); // Draw the captured image\r\n                                faceapi.draw.drawDetections(canvas, resizedDetections);\r\n                                faceapi.draw.drawFaceLandmarks(canvas, resizedDetections);\r\n\r\n                                resizedDetections.forEach((detection, i) => {\r\n                                    const { age, gender, genderProbability } = detection;\r\n                                    const dominantEmotion = getDominantEmotion(emotions[i]?.expressions || {});\r\n\r\n                                    const text = [\r\n                                        `Age: ${Math.round(age)}`,\r\n                                        `Gender: ${gender} (${(genderProbability * 100).toFixed(2)}%)`,\r\n                                        `Emotion: ${dominantEmotion}`\r\n                                    ].join(', ');\r\n\r\n                                    const box = detection.detection.box;\r\n                                    context.fillStyle = '#fff';\r\n                                    context.font = '14px Arial'; // Reduced font size\r\n                                    context.fillText(text, box.x, box.y + box.height + 20); // Moved text down\r\n                                });\r\n                            }\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleImageUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.files && event.target.files.length > 0) {\r\n            const file = event.target.files[0];\r\n            if (file && canvasRef.current) {\r\n                const img = await faceapi.bufferToImage(file);\r\n                const faces = await detectFaces(img);\r\n                const emotions = await detectEmotions(img);\r\n\r\n                const displaySize = { width: img.width, height: img.height };\r\n                faceapi.matchDimensions(canvasRef.current, displaySize);\r\n\r\n                const resizedDetections = faceapi.resizeResults(faces, displaySize);\r\n                const canvas = canvasRef.current;\r\n                if (canvas) {\r\n                    const context = canvas.getContext('2d');\r\n                    if (context) {\r\n                        context.clearRect(0, 0, displaySize.width, displaySize.height);\r\n                        context.drawImage(img, 0, 0, displaySize.width, displaySize.height); // Draw the uploaded image\r\n                        faceapi.draw.drawDetections(canvas, resizedDetections);\r\n                        faceapi.draw.drawFaceLandmarks(canvas, resizedDetections);\r\n\r\n                        resizedDetections.forEach((detection, i) => {\r\n                            const { age, gender, genderProbability } = detection;\r\n                            const dominantEmotion = getDominantEmotion(emotions[i]?.expressions || {});\r\n\r\n                            const text = [\r\n                                `Age: ${Math.round(age)}`,\r\n                                `Gender: ${gender} (${(genderProbability * 100).toFixed(2)}%)`,\r\n                                `Emotion: ${dominantEmotion}`\r\n                            ].join(', ');\r\n\r\n                            const box = detection.detection.box;\r\n                            context.fillStyle = '#fff';\r\n                            context.font = '14px Arial'; // Reduced font size\r\n                            context.fillText(text, box.x, box.y + box.height + 20); // Moved text down\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleButtonClick = () => {\r\n        if (fileInputRef.current) {\r\n            fileInputRef.current.click();\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n        <Container maxWidth=\"md\" sx={{ py: 4 }}>\r\n            <Typography variant=\"h5\" align=\"center\" gutterBottom>\r\n                WEBCAM IMAGE FEED WITH FACIAL RECOGNITION\r\n            </Typography>\r\n\r\n            <Card sx={{ width: '85%', margin: 'auto' }}>\r\n                <CardContent sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n\r\n                    <Box sx={{ position: 'relative', width: '100%', paddingTop: '75%', overflow: 'hidden', marginBottom: 2 }}>\r\n                        <input\r\n                            type=\"file\"\r\n                            ref={fileInputRef}\r\n                            onChange={handleImageUpload}\r\n                            style={{ display: 'none' }}\r\n                        />\r\n\r\n                        {isWebcamOn && (\r\n                            <Webcam\r\n                                audio={false}\r\n                                ref={webcamRef}\r\n                                screenshotFormat=\"image/jpeg\"\r\n                                videoConstraints={{\r\n                                    width: 580,\r\n                                    height: 420,\r\n                                    facingMode: 'user',\r\n                                }}\r\n                                style={{\r\n                                    position: 'absolute',\r\n                                    top: 0,\r\n                                    left: 0,\r\n                                    width: '100%',\r\n                                    height: '100%',\r\n                                }}\r\n                            />\r\n                        )}\r\n\r\n                        <canvas\r\n                            ref={canvasRef}\r\n                            style={{\r\n                                position: 'absolute',\r\n                                top: 0,\r\n                                left: 0,\r\n                                width: '100%',\r\n                                height: '100%',\r\n                            }}\r\n                        />\r\n                    </Box>\r\n\r\n                    <Box display=\"flex\" justifyContent=\"center\" gap={2} flexWrap=\"wrap\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={captureAndDetect}\r\n                            disabled={!isWebcamOn}\r\n                        >\r\n                            Capture & Detect Faces & Emotions\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            onClick={startWebcam}\r\n                            disabled={isWebcamOn}\r\n                        >\r\n                            Start Webcam\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            onClick={stopWebcam}\r\n                            disabled={!isWebcamOn}\r\n                        >\r\n                            Stop Webcam\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"secondary\"\r\n                            onClick={handleButtonClick}\r\n                        >\r\n                            Upload Image\r\n                        </Button>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default WebcamFeed;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}